# generall informations

apiVersion: v1
kind: Template
metadata:
  name: openspace-template
  annotations:
    openshift.io/display-name: OpenSpace
    description: OpenSpace for PAD1 and PAD2
    iconClass: icon-hdalogo
    tags: hda,hdapad
objects:

# init container definitions

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: initcontainer
  spec:
    replicas: 0
    selector:
      app: initcontainer
      deploymentconfig: initcontainer
    template:
      metadata:
        labels:
          app: initcontainer
          deploymentconfig: initcontainer
      spec:
        containers:
        - env:
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ADMIN_FIRST_NAME
            value: ${ADMIN_FIRST_NAME}
          - name: ADMIN_LAST_NAME
            value: ${ADMIN_LAST_NAME}
          - name: OPENSUBMIT_ADMIN_MAIL
            value: ${OPENSUBMIT_ADMIN_MAIL}
          - name: JENKINS_ADMIN
            value: ${JENKINS_ADMIN}
          - name: OC_URL
            value: ${OC_URL}
          - name: WEB_DOMAIN
            value: web-$(MY_POD_NAMESPACE).${DOMAIN}
          - name: JENKINS_DOMAIN
            value: jenkins-$(MY_POD_NAMESPACE).${DOMAIN}
          - name: SSO_USERNAME
            value: ${SSO_ADMIN_USERNAME}
          - name: SSO_PASSWORD
            value: ${SSO_ADMIN_PASSWORD}
          - name: SSO_URL
            value: https://sso-$(MY_POD_NAMESPACE).${DOMAIN}
          - name: GIT_URL
            value: ${GIT_URL}
          image: ' '
          name: initcontainer
          volumeMounts:
          - mountPath: /jenkins
            name: jenkins-volume
        volumes:
        - name: jenkins-volume
          persistentVolumeClaim:
            claimName: jenkins-volume
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - initcontainer
        from:
          kind: ImageStreamTag
          name: initcontainer:latest
      type: ImageChange

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: initcontainer
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: koehlerlukas/opensubmit-initcontainer:latest
      name: latest

# opensubmit definitions

- kind: Route
  apiVersion: v1
  metadata:
    name: web
    annotations:
      template.openshift.io/expose-uri: 'http://{.spec.host}{.spec.path}'
      haproxy.router.openshift.io/timeout: 4m
  spec:
    to:
      kind: Service
      name: web
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect


- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: opensubmit-share-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${OPENSUBMIT_SHARE}Gi
  status: {}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: postgres-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${POSTGRES_SIZE}Gi
  status: {}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: opensubmit-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${WEB_VOLUME_SIZE}Gi
  status: {}

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: exec
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: koehlerlukas/opensubmit-exec:latest
      name: latest

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: web
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: koehlerlukas/opensubmit-web:latest
      name: latest

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: db
  spec:
    replicas: 1
    selector:
      app: db
      deploymentconfig: db
    template:
      metadata:
        labels:
          app: db
          deploymentconfig: db
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: opensubmit
          - name: POSTGRESQL_PASSWORD
            value: opensubmit
          - name: POSTGRESQL_DATABASE
            value: opensubmit
          image: >-
            docker.io/centos/postgresql-96-centos7@sha256:63cd5c029def2047a9c8c35f578bb627e2c0eda6d268d3a815d685aa2c127d48
          name: db
          ports:
          - containerPort: 5432
            protocol: TCP
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgres-volume
        volumes:
        - name: postgres-volume
          persistentVolumeClaim:
            claimName: postgres-volume
    test: false

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: web
  spec:
    replicas: 1
    selector:
      app: web
      deploymentconfig: web
    template:
      metadata:
        labels:
          app: web
          deploymentconfig: web
      spec:
        containers:
        - env:
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: OPENSUBMIT_SERVER_URL
            value: https://web-$(MY_POD_NAMESPACE).${DOMAIN}
          - name: OPENSUBMIT_DATABASE_ENGINE
            value: postgresql
          - name: OPENSUBMIT_DATABASE_HOST
            value: db
          - name: OPENSUBMIT_DATABASE_NAME
            value: opensubmit
          - name: OPENSUBMIT_DATABASE_PASSWORD
            value: opensubmit
          - name: OPENSUBMIT_DATABASE_USER
            value: opensubmit
          - name: OPENSUBMIT_SERVER_HOSTALIASES
            value: web
          - name: OPENSUBMIT_SERVER_MEDIAROOT
            value: /data/media/
          - name: OPENSHIFT_APP_DNS
            value: '*'
          - name: OPENSUBMIT_LOGIN_DEMO
            value: 'False'
          - name: OPENSUBMIT_DEBUG
            value: 'False'
          - name: OPENSUBMIT_OPENSHIFT_SSO_PROVIDER
            value: https://sso-$(MY_POD_NAMESPACE).${DOMAIN}/auth/realms/hda/protocol/openid-connect
          - name: OPENSUBMIT_LOGIN_OPENSHIFT_SSO_TITLE
            value: Hochschule Darmstadt
          - name: OPENSUBMIT_LOGIN_OPENSHIFT_SSO_OIDC_VERIFY_SSL
            value: 'False'
          - name: OPENSUBMIT_LOGIN_OPENSHIFT_SSO_OIDC_RP_CLIENT_ID
            value: opensubmit
          - name: OPENSUBMIT_LOGIN_OPENSHIFT_SSO_OIDC_RP_CLIENT_SECRET
            value: SECRET
          image: ' '
          name: web
          ports:
          volumeMounts:
          - mountPath: /data
            name: opensubmit-volume
        volumes:
        - name: opensubmit-volume
          persistentVolumeClaim:
            claimName: opensubmit-volume
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - web
        from:
          kind: ImageStreamTag
          name: web:latest
      type: ImageChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: exec
  spec:
    replicas: 1
    selector:
      app: exec
      deploymentconfig: exec
    template:
      metadata:
        labels:
          app: exec
          deploymentconfig: exec
      spec:
        containers:
        - env:
          - name: OPENSUBMIT_SERVER_HOST
            value: http://web:8000
          image: ' '
          name: exec
          volumeMounts:
          - mountPath: /tmp
            name: opensubmit-share-volume
        volumes:
        - name: opensubmit-share-volume
          persistentVolumeClaim:
            claimName: opensubmit-share-volume
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - exec
        from:
          kind: ImageStreamTag
          name: exec:latest
      type: ImageChange

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: db
    name: db
  spec:
    ports:
    - name: db-5432
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      deploymentconfig: db

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: web
    name: web
  spec:
    ports:
    - name: opensubmit-web
      port: 8000
      protocol: TCP
      targetPort: 80
    selector:
      app: web

# Jenkins definitions

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: jenkins
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: koehlerlukas/opensubmit-jenkins:latest
      name: latest

- kind: Route
  apiVersion: v1
  metadata:
    name: jenkins
    annotations:
      template.openshift.io/expose-uri: 'http://{.spec.host}{.spec.path}'
      haproxy.router.openshift.io/timeout: 4m
  spec:
    to:
      kind: Service
      name: jenkins
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect

- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: jenkins-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${JENKINS_VOLUME_CAPACITY}Gi

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: jenkins
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: jenkins:latest
        lastTriggeredImage:
    - type: ConfigChange
    replicas: 1
    selector:
      name: jenkins
    template:
      metadata:
        labels:
          name: jenkins
      spec:
        serviceAccountName: jenkins
        containers:
        - name: jenkins
          image: ' '
          env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: 'false'
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: 'false'
          - name: DISABLE_ADMINISTRATIVE_MONITORS
            value: 'false'
          - name: KUBERNETES_MASTER
            value: https://kubernetes.default:443
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: 'true'
          - name: JENKINS_PASSWORD
            value: admin
          - name: ENABLE_FATAL_ERROR_LOG_FILE
            value: 'false'
          volumeMounts:
          - name: jenkins-volume
            mountPath: /var/lib/jenkins
          - name: opensubmit-share-volume
            mountPath: /opensubmit
          terminationMessagePath: /dev/termination-log
          securityContext:
            capabilities: {}
            privileged: false
        volumes:
        - name: jenkins-volume
          persistentVolumeClaim:
            claimName: jenkins-volume
        - name: opensubmit-share-volume
          persistentVolumeClaim:
            claimName: opensubmit-share-volume
        restartPolicy: Always
        dnsPolicy: ClusterFirst

- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: jenkins
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"jenkins"}}'

- kind: RoleBinding
  apiVersion: v1
  metadata:
    name: jenkins_edit
  groupNames:
  subjects:
  - kind: ServiceAccount
    name: jenkins
  roleRef:
    name: edit

- kind: Service
  apiVersion: v1
  metadata:
    name: jenkins-jnlp
  spec:
    ports:
    - name: agent
      protocol: TCP
      port: 50000
      targetPort: 50000
      nodePort: 0
    selector:
      name: jenkins
    type: ClusterIP
    sessionAffinity: None

- kind: Service
  apiVersion: v1
  metadata:
    name: jenkins
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "jenkins-jnlp", "namespace": "", "kind": "Service"}]'
      service.openshift.io/infrastructure: 'true'
  spec:
    ports:
    - name: web
      protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 0
    selector:
      name: jenkins
    type: ClusterIP
    sessionAffinity: None

# SSO Stuff
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 8443
      targetPort: 8443
    selector:
      deploymentConfig: sso
  metadata:
    name: sso
    labels:
      application: sso
    annotations:
      description: The web server's https port.
      service.alpha.openshift.io/serving-cert-secret-name: sso-x509-https-secret
      service.alpha.openshift.io/dependencies: '[{"name": "sso-postgresql",
        "kind": "Service"}]'

- kind: Service
  apiVersion: v1
  spec:
    ports:
    - name: 5432-port
      port: 5432
      targetPort: 5432
    selector:
      deploymentConfig: sso-postgresql
  metadata:
    name: sso-postgresql
    labels:
      application: sso
    annotations:
      description: The database server's port.
- kind: Service
  apiVersion: v1
  spec:
    clusterIP: None
    ports:
    - name: ping
      port: 8888
    selector:
      deploymentConfig: sso
  metadata:
    name: sso-ping
    labels:
      application: sso
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
      service.alpha.openshift.io/serving-cert-secret-name: sso-x509-jgroups-secret
      description: The JGroups ping port for clustering.
- kind: Route
  apiVersion: v1
  id: sso-https
  metadata:
    name: sso
    labels:
      application: sso
    annotations:
      description: Route for application's https service.
  spec:
    to:
      name: sso
    tls:
      termination: reencrypt
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: sso
    labels:
      application: sso
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - sso
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: redhat-sso72-openshift:1.1
    - type: ConfigChange
    replicas: 1
    selector:
      deploymentConfig: sso
    template:
      metadata:
        name: sso
        labels:
          deploymentConfig: sso
          application: sso
      spec:
        terminationGracePeriodSeconds: 75
        containers:
        - name: sso
          image: sso
          imagePullPolicy: Always
          volumeMounts:
          - name: sso-x509-https-volume
            mountPath: /etc/x509/https
            readOnly: true
          - name: sso-x509-jgroups-volume
            mountPath: /etc/x509/jgroups
            readOnly: true
          livenessProbe:
            exec:
              command:
              - '/bin/bash'
              - '-c'
              - '/opt/eap/bin/livenessProbe.sh'
            initialDelaySeconds: 60
          readinessProbe:
            exec:
              command:
              - '/bin/bash'
              - '-c'
              - '/opt/eap/bin/readinessProbe.sh'
          ports:
          - name: jolokia
            containerPort: 8778
            protocol: TCP
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
          - name: ping
            containerPort: 8888
            protocol: TCP
          env:
          - name: DB_SERVICE_PREFIX_MAPPING
            value: sso-postgresql=DB
          - name: DB_USERNAME
            value: ${DB_USERNAME}
          - name: DB_PASSWORD
            value: ${DB_PASSWORD}
          - name: DB_DATABASE
            value: root
          - name: TX_DATABASE_PREFIX_MAPPING
            value: sso-postgresql=DB
          - name: JGROUPS_PING_PROTOCOL
            value: openshift.DNS_PING
          - name: OPENSHIFT_DNS_PING_SERVICE_NAME
            value: sso-ping
          - name: OPENSHIFT_DNS_PING_SERVICE_PORT
            value: '8888'
          - name: X509_CA_BUNDLE
            value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
          - name: JGROUPS_CLUSTER_PASSWORD
            value: ${JGROUPS_CLUSTER_PASSWORD}
          - name: SSO_ADMIN_USERNAME
            value: ${SSO_ADMIN_USERNAME}
          - name: SSO_ADMIN_PASSWORD
            value: ${SSO_ADMIN_PASSWORD}
        volumes:
        - name: sso-x509-https-volume
          secret:
            secretName: sso-x509-https-secret
        - name: sso-x509-jgroups-volume
          secret:
            secretName: sso-x509-jgroups-secret
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: sso-postgresql
    labels:
      application: sso
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - sso-postgresql
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: postgresql:9.5
    - type: ConfigChange
    replicas: 1
    selector:
      deploymentConfig: sso-postgresql
    template:
      metadata:
        name: sso-postgresql
        labels:
          deploymentConfig: sso-postgresql
          application: sso
      spec:
        terminationGracePeriodSeconds: 60
        containers:
        - name: sso-postgresql
          image: postgresql
          imagePullPolicy: Always
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
              - '/bin/sh'
              - '-i'
              - '-c'
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                  'SELECT 1'
          livenessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: sso-postgresql-pvol
          env:
          - name: POSTGRESQL_USER
            value: ${DB_USERNAME}
          - name: POSTGRESQL_PASSWORD
            value: ${DB_PASSWORD}
          - name: POSTGRESQL_DATABASE
            value: root
        volumes:
        - name: sso-postgresql-pvol
          persistentVolumeClaim:
            claimName: sso-postgresql-claim
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: sso-postgresql-claim
    labels:
      application: sso
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}Gi

parameters:
# global parameter
- value: '192.168.99.100.nip.io'
  required: true
  name: DOMAIN
  displayName: route domain

- displayName: openshift url
  value: 'https://192.168.99.100:8443'
  required: true
  name: OC_URL

- displayName: git base path
  description: this url is for the initcontainer
  value: 'https://raw.githubusercontent.com/lukas15442/open-space/master/openshift/initcontainer/config'
  required: true
  name: GIT_URL

- displayName: jenkins admin username
  description: This user will be admin
  required: true
  name: JENKINS_ADMIN

- displayName: jenkins admin first name
  description: This user will be admin
  required: true
  name: ADMIN_FIRST_NAME

- displayName: jenkins admin last name
  description: This user will be admin
  required: true
  name: ADMIN_LAST_NAME

- displayName: opensubmit admin email
  description: opensubmit user with this email will be admin
  required: true
  name: OPENSUBMIT_ADMIN_MAIL

# opensubmit parameter
- displayName: opensubmit share volume size in GB
  description: share volume is for jenkins /opensubmit and for exec /tmp
  from: '[0-9]{4}'
  value: '10'
  required: true
  name: OPENSUBMIT_SHARE

- displayName: opensubmit postgres volume size in GB
  from: '[0-9]{4}'
  value: '10'
  required: true
  name: POSTGRES_SIZE

- displayName: opensubmit-web volume size in GB
  from: '[0-9]{4}'
  required: true
  value: '10'
  name: WEB_VOLUME_SIZE

# jenkins parameter
- name: JENKINS_VOLUME_CAPACITY
  displayName: jenkins volume size in GB
  value: '10'
  required: true

# SSO
- displayName: sso database username
  name: DB_USERNAME
  from: user[a-zA-Z0-9]{3}
  generate: expression
  required: true

- displayName: sso database password
  name: DB_PASSWORD
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true

- displayName: sso database volume size in GB
  name: VOLUME_CAPACITY
  from: '[0-9]{4}'
  value: '10'
  required: true

- displayName: JGroups cluster password
  name: JGROUPS_CLUSTER_PASSWORD
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true

- displayName: RH-SSO administrator username
  name: SSO_ADMIN_USERNAME
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true

- displayName: RH-SSO administrator password
  name: SSO_ADMIN_PASSWORD
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true



