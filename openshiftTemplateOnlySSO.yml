# generall informations

apiVersion: v1
kind: Template
metadata:
  name: openspace-template
  annotations:
    openshift.io/display-name: OpenSpace
    description: OpenSpace for PAD1 and PAD2
    iconClass: icon-hdalogo
    tags: hda,hdapad
objects:


# SSO Stuff
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 8443
      targetPort: 8443
    selector:
      deploymentConfig: sso
  metadata:
    name: sso
    labels:
      application: sso
    annotations:
      description: The web server's https port.
      service.alpha.openshift.io/serving-cert-secret-name: sso-x509-https-secret
      service.alpha.openshift.io/dependencies: '[{"name": "sso-postgresql",
        "kind": "Service"}]'

- kind: Service
  apiVersion: v1
  spec:
    ports:
    - name: 5432-port
      port: 5432
      targetPort: 5432
    selector:
      deploymentConfig: sso-postgresql
  metadata:
    name: sso-postgresql
    labels:
      application: sso
    annotations:
      description: The database server's port.

- kind: Service
  apiVersion: v1
  spec:
    clusterIP: None
    ports:
    - name: ping
      port: 8888
    selector:
      deploymentConfig: sso
  metadata:
    name: sso-ping
    labels:
      application: sso
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
      service.alpha.openshift.io/serving-cert-secret-name: sso-x509-jgroups-secret
      description: The JGroups ping port for clustering.

- kind: Route
  apiVersion: v1
  id: sso-https
  metadata:
    name: sso
    labels:
      application: sso
    annotations:
      description: Route for application's https service.
  spec:
    to:
      name: sso
    tls:
      termination: reencrypt

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: redhat-sso
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: registry.access.redhat.com/redhat-sso-7/sso72-openshift:1.1
      name: '1.1'

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: sso
    labels:
      application: sso
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - sso
        from:
          kind: ImageStreamTag
          name: redhat-sso:1.1
    - type: ConfigChange
    replicas: 0
    selector:
      deploymentConfig: sso
    template:
      metadata:
        name: sso
        labels:
          deploymentConfig: sso
          application: sso
      spec:
        terminationGracePeriodSeconds: 75
        containers:
        - name: sso
          image: sso
          imagePullPolicy: Always
          volumeMounts:
          - name: sso-x509-https-volume
            mountPath: /etc/x509/https
            readOnly: true
          - name: sso-x509-jgroups-volume
            mountPath: /etc/x509/jgroups
            readOnly: true
          livenessProbe:
            exec:
              command:
              - '/bin/bash'
              - '-c'
              - '/opt/eap/bin/livenessProbe.sh'
            initialDelaySeconds: 60
          readinessProbe:
            exec:
              command:
              - '/bin/bash'
              - '-c'
              - '/opt/eap/bin/readinessProbe.sh'
          ports:
          - name: jolokia
            containerPort: 8778
            protocol: TCP
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
          - name: ping
            containerPort: 8888
            protocol: TCP
          env:
          - name: DB_SERVICE_PREFIX_MAPPING
            value: sso-postgresql=DB
          - name: DB_USERNAME
            value: ${DB_USERNAME}
          - name: DB_PASSWORD
            value: ${DB_PASSWORD}
          - name: DB_DATABASE
            value: root
          - name: TX_DATABASE_PREFIX_MAPPING
            value: sso-postgresql=DB
          - name: JGROUPS_PING_PROTOCOL
            value: openshift.DNS_PING
          - name: OPENSHIFT_DNS_PING_SERVICE_NAME
            value: sso-ping
          - name: OPENSHIFT_DNS_PING_SERVICE_PORT
            value: '8888'
          - name: X509_CA_BUNDLE
            value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
          - name: JGROUPS_CLUSTER_PASSWORD
            value: ${JGROUPS_CLUSTER_PASSWORD}
          - name: SSO_ADMIN_USERNAME
            value: ${SSO_ADMIN_USERNAME}
          - name: SSO_ADMIN_PASSWORD
            value: ${SSO_ADMIN_PASSWORD}
        volumes:
        - name: sso-x509-https-volume
          secret:
            secretName: sso-x509-https-secret
        - name: sso-x509-jgroups-volume
          secret:
            secretName: sso-x509-jgroups-secret

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: sso-postgresql
    labels:
      application: sso
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - sso-postgresql
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: postgresql:9.6
    - type: ConfigChange
    replicas: 0
    selector:
      deploymentConfig: sso-postgresql
    template:
      metadata:
        name: sso-postgresql
        labels:
          deploymentConfig: sso-postgresql
          application: sso
      spec:
        terminationGracePeriodSeconds: 60
        containers:
        - name: sso-postgresql
          image: postgresql
          imagePullPolicy: Always
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
              - '/bin/sh'
              - '-i'
              - '-c'
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                  'SELECT 1'
          livenessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: sso-postgresql-pvol
          env:
          - name: POSTGRESQL_USER
            value: ${DB_USERNAME}
          - name: POSTGRESQL_PASSWORD
            value: ${DB_PASSWORD}
          - name: POSTGRESQL_DATABASE
            value: root
        volumes:
        - name: sso-postgresql-pvol
          persistentVolumeClaim:
            claimName: sso-postgresql-claim
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: sso-postgresql-claim
    labels:
      application: sso
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}Gi

parameters:
# global parameter
- value: 'apps.ocp.fbi.h-da.de'
  required: true
  name: DOMAIN
  displayName: route domain

- displayName: openshift url
  value: 'https://console.ocp.fbi.h-da.de'
  required: true
  name: OC_URL

- displayName: git base path
  description: this url is for the initcontainer
  value: 'https://code.fbi.h-da.de/SS18-REP-PAD2/Config/raw/master/config'
  required: true
  name: GIT_URL

- displayName: jenkins admin username
  description: This user will be admin
  required: true
  name: JENKINS_ADMIN

- displayName: jenkins admin first name
  description: This user will be admin
  required: true
  name: ADMIN_FIRST_NAME

- displayName: jenkins admin last name
  description: This user will be admin
  required: true
  name: ADMIN_LAST_NAME

- displayName: opensubmit admin email
  description: opensubmit user with this email will be admin
  required: true
  name: OPENSUBMIT_ADMIN_MAIL

# opensubmit parameter
- displayName: opensubmit postgres volume size in GB
  from: '[0-9]{4}'
  value: '10'
  required: true
  name: POSTGRES_SIZE

- displayName: opensubmit-web volume size in GB
  from: '[0-9]{4}'
  required: true
  value: '10'
  name: WEB_VOLUME_SIZE

# jenkins parameter
- name: JENKINS_VOLUME_CAPACITY
  displayName: jenkins volume size in GB
  value: '10'
  required: true

# SSO
- displayName: sso database username
  name: DB_USERNAME
  from: user[a-zA-Z0-9]{3}
  generate: expression
  required: true

- displayName: sso database password
  name: DB_PASSWORD
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true

- displayName: sso database volume size in GB
  name: VOLUME_CAPACITY
  from: '[0-9]{4}'
  value: '10'
  required: true

- displayName: JGroups cluster password
  name: JGROUPS_CLUSTER_PASSWORD
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true

- displayName: RH-SSO administrator username
  name: SSO_ADMIN_USERNAME
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true

- displayName: RH-SSO administrator password
  name: SSO_ADMIN_PASSWORD
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true

- displayName: Jenkins API Password
  name: JENKINS_API_PASSWORD
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true



