# generall informations

apiVersion: v1
kind: Template
metadata:
  name: openspace-template
  annotations:
    openshift.io/display-name: OpenSpace
    description: OpenSpace for PAD1 and PAD2
    iconClass: icon-hdalogo
    tags: hda,hdapad
objects:

# init container definitions

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: initcontainer
  spec:
    replicas: 0
    selector:
      app: initcontainer
      deploymentconfig: initcontainer
    template:
      metadata:
        labels:
          app: initcontainer
          deploymentconfig: initcontainer
      spec:
        containers:
        - env:
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JENKINS_API_PASSWORD
            value: ${JENKINS_API_PASSWORD}
          - name: ADMIN_FIRST_NAME
            value: ${ADMIN_FIRST_NAME}
          - name: ADMIN_LAST_NAME
            value: ${ADMIN_LAST_NAME}
          - name: OPENSUBMIT_ADMIN_MAIL
            value: ${OPENSUBMIT_ADMIN_MAIL}
          - name: JENKINS_ADMIN
            value: ${JENKINS_ADMIN}
          - name: OC_URL
            value: ${OC_URL}
          - name: WEB_DOMAIN
            value: web-$(MY_POD_NAMESPACE).${DOMAIN}
          - name: JENKINS_DOMAIN
            value: jenkins-$(MY_POD_NAMESPACE).${DOMAIN}
          - name: OPENSUBMIT_LOGIN_GITLAB_JENKINS_OAUTH_KEY
            value: ${OPENSUBMIT_LOGIN_GITLAB_JENKINS_OAUTH_KEY}
          - name: OPENSUBMIT_LOGIN_GITLAB_JENKINS_OAUTH_SECRET
            value: ${OPENSUBMIT_LOGIN_GITLAB_JENKINS_OAUTH_SECRET}
          image: ' '
          name: initcontainer
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - initcontainer
        from:
          kind: ImageStreamTag
          name: initcontainer:${IMAGE_VERSION}
      type: ImageChange

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: initcontainer
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: koehlerlukas/opensubmit-initcontainer:${IMAGE_VERSION}
      name: ${IMAGE_VERSION}

# opensubmit definitions

- kind: Route
  apiVersion: v1
  metadata:
    name: web
    annotations:
      template.openshift.io/expose-uri: 'http://{.spec.host}{.spec.path}'
      haproxy.router.openshift.io/timeout: 4m
  spec:
    to:
      kind: Service
      name: web
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect


- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: postgres-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${POSTGRES_SIZE}Gi
  status: {}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: opensubmit-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${WEB_VOLUME_SIZE}Gi
  status: {}

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: exec
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: koehlerlukas/opensubmit-exec:${IMAGE_VERSION}
      name: ${IMAGE_VERSION}

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: web
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: koehlerlukas/opensubmit-web:${IMAGE_VERSION}
      name: ${IMAGE_VERSION}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: db
  spec:
    replicas: 0
    selector:
      app: db
      deploymentconfig: db
    template:
      metadata:
        labels:
          app: db
          deploymentconfig: db
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: opensubmit
          - name: POSTGRESQL_PASSWORD
            value: opensubmit
          - name: POSTGRESQL_DATABASE
            value: opensubmit
          image: ' '
          name: db
          ports:
          - containerPort: 5432
            protocol: TCP
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgres-volume
        volumes:
        - name: postgres-volume
          persistentVolumeClaim:
            claimName: postgres-volume
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - db
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: postgresql:9.6
      type: ImageChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: web
  spec:
    replicas: 0
    selector:
      app: web
      deploymentconfig: web
    template:
      metadata:
        labels:
          app: web
          deploymentconfig: web
      spec:
        containers:
        - env:
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: OPENSUBMIT_SERVER_URL
            value: https://web-$(MY_POD_NAMESPACE).${DOMAIN}
          - name: OPENSUBMIT_DATABASE_ENGINE
            value: postgresql
          - name: OPENSUBMIT_DATABASE_HOST
            value: db
          - name: OPENSUBMIT_DATABASE_NAME
            value: opensubmit
          - name: OPENSUBMIT_DATABASE_PASSWORD
            value: opensubmit
          - name: OPENSUBMIT_DATABASE_USER
            value: opensubmit
          - name: OPENSUBMIT_SERVER_HOSTALIASES
            value: web
          - name: OPENSUBMIT_SERVER_MEDIAROOT
            value: /data/media/
          - name: OPENSHIFT_APP_DNS
            value: '*'
          - name: OPENSUBMIT_LOGIN_DEMO
            value: 'False'
          - name: OPENSUBMIT_DEBUG
            value: 'False'
          - name: OPENSUBMIT_LOGIN_GITLAB_DESCRIPTION
            value: ${OPENSUBMIT_LOGIN_GITLAB_DESCRIPTION}
          - name: OPENSUBMIT_LOGIN_GITLAB_URL
            value: ${OPENSUBMIT_LOGIN_GITLAB_URL}
          - name: OPENSUBMIT_LOGIN_GITLAB_OAUTH_KEY
            value: ${OPENSUBMIT_LOGIN_GITLAB_OPENSUBMIT_OAUTH_KEY}
          - name: OPENSUBMIT_LOGIN_GITLAB_OAUTH_SECRET
            value: ${OPENSUBMIT_LOGIN_GITLAB_OPENSUBMIT_OAUTH_SECRET}
          - name: OPENSUBMIT_LOGIN_OPENID_PROVIDER
            value: ''
          image: ' '
          name: web
          ports:
          volumeMounts:
          - mountPath: /data
            name: opensubmit-volume
        volumes:
        - name: opensubmit-volume
          persistentVolumeClaim:
            claimName: opensubmit-volume
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - web
        from:
          kind: ImageStreamTag
          name: web:${IMAGE_VERSION}
      type: ImageChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: exec
  spec:
    replicas: 0
    selector:
      app: exec
      deploymentconfig: exec
    template:
      metadata:
        labels:
          app: exec
          deploymentconfig: exec
      spec:
        containers:
        - env:
          - name: OPENSUBMIT_SERVER_HOST
            value: http://web:8000
          image: ' '
          name: exec
          volumeMounts:
          - mountPath: /ssh
            name: opensubmit-exec-ssh-volume
        volumes:
        - name: opensubmit-exec-ssh-volume
          persistentVolumeClaim:
            claimName: opensubmit-exec-ssh-volume
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - exec
        from:
          kind: ImageStreamTag
          name: exec:${IMAGE_VERSION}
      type: ImageChange

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: opensubmit-exec-ssh-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 10Mi
  status: {}

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: db
    name: db
  spec:
    ports:
    - name: db-5432
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      deploymentconfig: db

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: web
    name: web
  spec:
    ports:
    - name: opensubmit-web
      port: 8000
      protocol: TCP
      targetPort: 8080
    selector:
      app: web

# Jenkins definitions

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: jenkins
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: koehlerlukas/opensubmit-jenkins:${IMAGE_VERSION}
      name: ${IMAGE_VERSION}

- kind: Route
  apiVersion: v1
  metadata:
    name: jenkins
    annotations:
      template.openshift.io/expose-uri: 'http://{.spec.host}{.spec.path}'
      haproxy.router.openshift.io/timeout: 4m
  spec:
    to:
      kind: Service
      name: jenkins
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect

- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: jenkins-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${JENKINS_VOLUME_CAPACITY}Gi

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: jenkins
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: jenkins:${IMAGE_VERSION}
        lastTriggeredImage:
    - type: ConfigChange
    replicas: 0
    selector:
      name: jenkins
    template:
      metadata:
        labels:
          name: jenkins
      spec:
        serviceAccountName: jenkins
        containers:
        - name: jenkins
          image: ' '
          env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: 'false'
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: 'false'
          - name: DISABLE_ADMINISTRATIVE_MONITORS
            value: 'false'
          - name: KUBERNETES_MASTER
            value: https://kubernetes.default:443
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: 'true'
          - name: JENKINS_PASSWORD
            value: admin
          - name: ENABLE_FATAL_ERROR_LOG_FILE
            value: 'false'
          volumeMounts:
            - name: jenkins-volume
              mountPath: /var/lib/jenkins
          terminationMessagePath: /dev/termination-log
          securityContext:
            capabilities: {}
            privileged: false
        volumes:
        - name: jenkins-volume
          persistentVolumeClaim:
            claimName: jenkins-volume
        restartPolicy: Always
        dnsPolicy: ClusterFirst

- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: jenkins
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"jenkins"}}'

- kind: RoleBinding
  apiVersion: v1
  metadata:
    name: jenkins_edit
  groupNames:
  subjects:
  - kind: ServiceAccount
    name: jenkins
  roleRef:
    name: edit

- kind: Service
  apiVersion: v1
  metadata:
    name: jenkins-jnlp
  spec:
    ports:
    - name: agent
      protocol: TCP
      port: 50000
      targetPort: 50000
      nodePort: 0
    selector:
      name: jenkins
    type: ClusterIP
    sessionAffinity: None

- kind: Service
  apiVersion: v1
  metadata:
    name: jenkins-ssh
  spec:
    ports:
    - name: agent
      protocol: TCP
      port: 22
      targetPort: 2222
    selector:
      name: jenkins

- kind: Service
  apiVersion: v1
  metadata:
    name: jenkins
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "jenkins-jnlp", "namespace": "", "kind": "Service"}]'
      service.openshift.io/infrastructure: 'true'
  spec:
    ports:
    - name: web
      protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 0
    selector:
      name: jenkins
    type: ClusterIP
    sessionAffinity: None

parameters:
# global parameter
- required: true
  name: DOMAIN
  displayName: route domain

- displayName: openshift url
  required: true
  name: OC_URL

- displayName: admin username
  description: This user will be admin
  required: true
  name: JENKINS_ADMIN

- displayName: admin first name
  description: This user will be admin
  required: true
  name: ADMIN_FIRST_NAME

- displayName: admin last name
  description: This user will be admin
  required: true
  name: ADMIN_LAST_NAME

- displayName: admin mail
  description: This user will be admin
  required: true
  name: OPENSUBMIT_ADMIN_MAIL

- displayName: gitlab description
  required: true
  value: 'Hochschule Darmstadt'
  name: OPENSUBMIT_LOGIN_GITLAB_DESCRIPTION

- displayName: gitlab url
  required: true
  name: OPENSUBMIT_LOGIN_GITLAB_URL

- displayName: gitlab opensubmit key
  required: true
  name: OPENSUBMIT_LOGIN_GITLAB_OPENSUBMIT_OAUTH_KEY

- displayName: gitlab opensubmit secret
  required: true
  name: OPENSUBMIT_LOGIN_GITLAB_OPENSUBMIT_OAUTH_SECRET

- displayName: gitlab jenkins key
  required: true
  name: OPENSUBMIT_LOGIN_GITLAB_JENKINS_OAUTH_KEY

- displayName: gitlab jenkins secret
  required: true
  name: OPENSUBMIT_LOGIN_GITLAB_JENKINS_OAUTH_SECRET

- displayName: image version
  required: true
  description: image tag version from docker hub
  value: 'latest'
  name: IMAGE_VERSION

# opensubmit parameter
- displayName: opensubmit postgres volume size in GB
  from: '[0-9]{4}'
  value: '10'
  required: true
  name: POSTGRES_SIZE

- displayName: opensubmit-web volume size in GB
  from: '[0-9]{4}'
  required: true
  value: '10'
  name: WEB_VOLUME_SIZE

# jenkins parameter
- name: JENKINS_VOLUME_CAPACITY
  displayName: jenkins volume size in GB
  value: '10'
  required: true

- displayName: Jenkins API Password
  name: JENKINS_API_PASSWORD
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true



